name: Deploy Frontend

on:
  push:
    paths:
      - 'Chatbot-Frontend-main/**'
      - 'Chatbot-Frontend-master/**'
    branches:
      - main
      - master

jobs:
  deploy-frontend:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Debug connection info
      run: |
        echo "🔍 デバッグ情報:"
        echo "EC2_HOST: ${{ secrets.EC2_HOST }}"
        echo "EC2_USER: ${{ secrets.EC2_USER }}"
        echo "EC2_PATH: ${{ secrets.EC2_PATH }}"
        echo ""
        echo "🌐 ホスト接続性テスト:"
        ping -c 3 ${{ secrets.EC2_HOST }} || echo "❌ ホストにpingが届きません"

    - name: Setup SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        
        echo "🔑 SSH鍵の確認:"
        ls -la ~/.ssh/id_rsa
        echo ""
        
        echo "🔗 SSH接続テスト:"
        ssh -o ConnectTimeout=10 -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "echo 'SSH接続成功'" || {
          echo "❌ SSH接続に失敗しました"
          exit 1
        }
        
        echo "✅ SSH接続が成功しました"
        ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

    - name: Build frontend
      run: |
        echo "🏗️ フロントエンドビルド開始..."
        cd Chatbot-Frontend-main
        npm install
        npm run build
        
        echo "📦 ビルド内容確認:"
        ls -la dist/
        
        echo "📦 アーカイブ作成..."
        tar -czf frontend.tar.gz -C dist .
        
        echo "📦 アーカイブ内容確認:"
        tar -tzf frontend.tar.gz | head -10
        
        echo "✅ ビルド完了"

    - name: Deploy frontend
      run: |
        echo "📤 ファイル転送開始..."
        scp -o ConnectTimeout=30 -o ServerAliveInterval=10 Chatbot-Frontend-main/frontend.tar.gz ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/tmp/
        
        echo "🚀 フロントエンドデプロイ開始..."
        ssh -o ConnectTimeout=30 -o ServerAliveInterval=10 ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'ENDSSH'
          set -e
          
          # パス設定
          DEPLOY_PATH="${{ secrets.EC2_PATH }}"
          FRONTEND_PATH="/var/www/html"
          
          echo "📂 パス情報:"
          echo "DEPLOY_PATH: $DEPLOY_PATH"
          echo "FRONTEND_PATH: $FRONTEND_PATH"
          echo "現在のディレクトリ: $(pwd)"
          
          echo "🗂️ フロントエンドディレクトリ準備..."
          sudo mkdir -p $FRONTEND_PATH
          sudo chown $USER:$USER $FRONTEND_PATH
          
          echo "🧹 既存ファイルクリーンアップ..."
          rm -rf $FRONTEND_PATH/*
          
          echo "📦 ファイル展開..."
          cd $FRONTEND_PATH
          tar -xzf /tmp/frontend.tar.gz
          
          echo "📊 配置確認:"
          ls -la $FRONTEND_PATH/ | head -20
          
          echo "🔗 シンボリックリンク確認（存在する場合）:"
          if [ -L "$DEPLOY_PATH/static" ]; then
            echo "既存のシンボリックリンクを更新します"
            rm -f "$DEPLOY_PATH/static"
          fi
          
          # バックエンドの静的ファイルディレクトリにシンボリックリンクを作成
          if [ -d "$DEPLOY_PATH" ]; then
            ln -sf $FRONTEND_PATH "$DEPLOY_PATH/static"
            echo "シンボリックリンクを作成しました: $DEPLOY_PATH/static -> $FRONTEND_PATH"
          fi
          
          echo "🌐 Nginx設定確認..."
          if command -v nginx >/dev/null 2>&1; then
            echo "Nginxが見つかりました。設定をリロードします..."
            sudo nginx -t && sudo systemctl reload nginx || echo "Nginx設定の問題があります"
          else
            echo "Nginxが見つかりません"
          fi
          
          echo "🧹 一時ファイル削除..."
          rm -f /tmp/frontend.tar.gz
          
          echo "✅ フロントエンドデプロイ完了"
          echo "📊 最終確認:"
          echo "フロントエンドファイル数: $(find $FRONTEND_PATH -type f | wc -l)"
          echo "主要ファイル:"
          ls -la $FRONTEND_PATH/index.html $FRONTEND_PATH/assets/ 2>/dev/null || echo "主要ファイルが見つかりません"
        ENDSSH
        
        echo "✅ デプロイプロセス完了"
✅ タイトル以外が文字化けしてるのにタイトルが文字化けしていないから文字化け判定になっていないので
文字化けの判定をしっしてほしい。+ Gemini OCR連携の修正
【完了】
1. csv_processor.pyにて文字化け検出機能を強化。タイトル行だけでなく全体的な文字化けパターンを検出
2. api.pyでCSV処理フローを修正 - 文字化け検出時にGemini OCRを優先使用するよう変更
3. Gemini OCR処理を改善 - 文字化け対応特化プロンプトと高解像度画像生成を実装
4. 詳細ログ出力でGemini OCR処理状況を追跡可能に

✅ csvをアップロードすることができないのでアップロードできるようにしてください。
【完了】CSVファイルアップロード機能は既に実装済み。main.pyの/chatbot/api/upload-knowledgeエンドポイントで.csvファイルに対応済み。

✅ 複数ファイルが送られたら時間をかけて読み込んでください。一気にやろうとするとサーバーが落ちる可能性があるので
【完了】main.pyに新しいエンドポイント/chatbot/api/upload-multiple-knowledgeを追加。ファイル間に遅延（2-10秒）を設け、最大10ファイルまで順次処理する機能を実装。

✅ urlからの読み込み時はデータが大きくなりそうな時はゆっくりデータを取得するようにしてください。サーバーが落ちないようにしてください。
【完了】utils.pyにURL処理のスロットリング機能を追加。大きなファイルが予想されるURL（Google Drive、PDF等）で事前遅延を実装。ファイルサイズに応じた動的な待機時間も追加。

=== 実装完了サマリー ===
全ての要求された機能修正が完了しました：
1. 強化された文字化け検出
2. CSVファイルアップロード対応（既存機能の確認）
3. 複数ファイル対応の安全な処理
4. URL取得時のスロットリング

=== 追加実装（文字化け→Gemini生ファイル処理対応） ===
✅ CSVファイル: 文字化け検出時に生ファイルを直接Geminiに送信して復元
✅ テキストファイル(.txt): 同様の文字化け検出とGemini生ファイル処理を追加（修正完了）
   - Gemini APIの`upload_file`依存を削除し、直接テキスト処理に変更
✅ PDFファイル: Gemini画像解析による文字抽出に修正（修正完了）
   - 文字化け検出時のみGemini画像解析を実行（正常なPDFは通常処理）
   - PyMuPDFでPDFを高解像度画像に変換してからGeminiで解析
   - ページごとに画像として処理（最大10ページ）
   - Gemini APIの`upload_file`依存を削除（エラー解決）
   - 処理が「PDF (Gemini文字抽出)」として正確に表示される
   - popplerに依存しない安定した処理（PyMuPDF使用）
   - OCR fallback関数の引数エラーを修正済み
   - 文字化け検出ロジックを修正（過剰検出を防止）

🔄 今後の予定:
  - Wordファイル(.doc, .docx)への文字化け検出追加
  - Excelファイル(.xlsx, .xls)への文字化け検出追加


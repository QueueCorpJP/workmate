name: Deploy Frontend and Nginx to AWS

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
        
    - name: Create .env file
      run: |
        cat > .env << 'EOF'
        GOOGLE_API_KEY=${{ secrets.GOOGLE_API_KEY }}
        COMPANY_NAME="NTT AT"
        
        SUPABASE_URL=${{ secrets.SUPABASE_URL }}
        SUPABASE_KEY=${{ secrets.SUPABASE_KEY }}
        
        VITE_API_URL=${{ secrets.VITE_API_URL }}
        VITE_GOOGLE_DRIVE_CLIENT_ID=${{ secrets.VITE_GOOGLE_DRIVE_CLIENT_ID }}
        VITE_GOOGLE_DRIVE_API_KEY=${{ secrets.VITE_GOOGLE_DRIVE_API_KEY }}
        VITE_GOOGLE_REDIRECT_URI=${{ secrets.VITE_GOOGLE_REDIRECT_URI }}
        EOF
        
    - name: Build application
      run: npm run build
        
    - name: Create deployment archive
      run: tar -czf frontend-dist.tar.gz dist/
        
    - name: Deploy nginx configuration
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.AWS_HOST }}
        username: ${{ secrets.AWS_USERNAME }}
        key: ${{ secrets.AWS_PRIVATE_KEY }}
        source: "nginx/"
        target: "/tmp/"
        
    - name: Apply nginx configuration
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.AWS_HOST }}
        username: ${{ secrets.AWS_USERNAME }}
        key: ${{ secrets.AWS_PRIVATE_KEY }}
        script: |
          # デバッグ: ファイル存在確認
          echo "=== Checking /tmp/nginx/ contents ==="
          ls -la /tmp/nginx/ || exit 1
          ls -la /tmp/nginx/conf.d/ || exit 1
          
          echo "=== Checking file contents ==="
          cat /tmp/nginx/conf.d/workmatechat.com.conf || exit 1
          
          # 新しい設定を適用
          echo "=== Copying nginx.conf ==="
          sudo cp /tmp/nginx/nginx.conf /etc/nginx/nginx.conf || exit 1
          
          echo "=== Copying workmatechat.com.conf ==="
          sudo cp /tmp/nginx/conf.d/workmatechat.com.conf /etc/nginx/conf.d/workmatechat.com.conf || exit 1
          
          # 設定をテスト
          echo "=== Testing nginx configuration ==="
          sudo nginx -t || exit 1
          
          # nginxをリロード
          echo "=== Reloading nginx ==="
          sudo systemctl reload nginx || exit 1
          
          echo "=== Verification ==="
          sudo cat /etc/nginx/conf.d/workmatechat.com.conf | grep "変更！" || exit 1
          
          # 一時ファイル削除
          rm -rf /tmp/nginx
        
    - name: Deploy frontend files
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.AWS_HOST }}
        username: ${{ secrets.AWS_USERNAME }}
        key: ${{ secrets.AWS_PRIVATE_KEY }}
        source: "frontend-dist.tar.gz"
        target: "/home/ec2-user/"
        
    - name: Extract and deploy frontend
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.AWS_HOST }}
        username: ${{ secrets.AWS_USERNAME }}
        key: ${{ secrets.AWS_PRIVATE_KEY }}
        script: |
          # フロントエンドバックアップ作成
          sudo cp -r /var/www/html /var/www/html.backup.$(date +%Y%m%d_%H%M%S) || true
          
          # ファイル展開と配置
          cd /home/ec2-user
          tar -xzf frontend-dist.tar.gz
          sudo cp -r dist/* /var/www/html/
          
          # クリーンアップ
          rm -rf dist frontend-dist.tar.gz
          
          echo "✅ デプロイ完了" 